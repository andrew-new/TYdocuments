{\rtf1\ansi\ansicpg936\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 SimSun;}
{\colortbl;\red255\green255\blue255;\red50\green50\blue50;\red245\green249\blue239;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs24 \cf2 \cb3 1. NSData \uc0\u19982  NSString\
NSData\uc0\u65293 > NSString\
NSString *aString = [[NSString alloc] initWithData:adata encoding:NSUTF8StringEncoding];\
\
NSString\uc0\u65293 >NSData\
NSString *aString = @"1234abcd";\
NSData *aData = [aString dataUsingEncoding: NSUTF8StringEncoding];\
\
2.NSData \uc0\u19982  Byte\
NSData\uc0\u65293 > Byte\u25968 \u32452 \
NSString *testString = @"1234567890";\
NSData *testData = [testString dataUsingEncoding: NSUTF8StringEncoding];\
Byte *testByte = (Byte *)[testData bytes];\
for(int i=0;i<[testData length];i++)\
printf("testByte = %d\\n",testByte[i]);\
\
Byte\uc0\u25968 \u32452 \u65293 > NSData\
Byte byte[] = \{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\};\
NSData *adata = [[NSData alloc] initWithBytes:byte length:24];\
\
Byte\uc0\u25968 \u32452 \u65293 >16\u36827 \u21046 \u25968 \
Byte *bytes = (Byte *)[aData bytes];\
NSString *hexStr=@"";\
for(int i=0;i<[encryData length];i++)\
\{\
NSString *newHexStr = [NSString stringWithFormat:@"%x",bytes[i]&0xff]; ///16\uc0\u36827 \u21046 \u25968 \
if([newHexStr length]==1)\
hexStr = [NSString stringWithFormat:@"%@0%@",hexStr,newHexStr];\
else\
hexStr = [NSString stringWithFormat:@"%@%@",hexStr,newHexStr];\
\}\
NSLog(@"bytes \uc0\u30340 16\u36827 \u21046 \u25968 \u20026 :%@",hexStr);\
\
16\uc0\u36827 \u21046 \u25968 \u65293 >Byte\u25968 \u32452 \
///// \uc0\u23558 16\u36827 \u21046 \u25968 \u25454 \u36716 \u21270 \u25104 Byte \u25968 \u32452 \
NSString *hexString = @"3e435fab9c34891f"; //16\uc0\u36827 \u21046 \u23383 \u31526 \u20018 \
int j=0;\
Byte bytes[128];\'a0\
\pard\pardeftab720
\cf2 \'a0///3ds key\uc0\u30340 Byte \u25968 \u32452 \u65292  128\u20301 \
for(int i=0;i<[hexString length];i++)\
\{\
int int_ch;\'a0\'a0/// \uc0\u20004 \u20301 16\u36827 \u21046 \u25968 \u36716 \u21270 \u21518 \u30340 10\u36827 \u21046 \u25968 \
\'a0\
unichar hex_char1 = [hexString characterAtIndex:i]; ////\uc0\u20004 \u20301 16\u36827 \u21046 \u25968 \u20013 \u30340 \u31532 \u19968 \u20301 (\u39640 \u20301 *16)\
int int_ch1;\
if(hex_char1 >= '0' && hex_char1 <='9')\
int_ch1 = (hex_char1-48)*16;\'a0\'a0\'a0//// 0 \uc0\u30340 Ascll - 48\
else if(hex_char1 >= 'A' && hex_char1 <='F')\
int_ch1 = (hex_char1-55)*16; //// A \uc0\u30340 Ascll - 65\
else\
int_ch1 = (hex_char1-87)*16; //// a \uc0\u30340 Ascll - 97\
i++;\
\'a0\
unichar hex_char2 = [hexString characterAtIndex:i]; ///\uc0\u20004 \u20301 16\u36827 \u21046 \u25968 \u20013 \u30340 \u31532 \u20108 \u20301 (\u20302 \u20301 )\
int int_ch2;\
if(hex_char2 >= '0' && hex_char2 <='9')\
int_ch2 = (hex_char2-48); //// 0 \uc0\u30340 Ascll - 48\
else if(hex_char1 >= 'A' && hex_char1 <='F')\
int_ch2 = hex_char2-55; //// A \uc0\u30340 Ascll - 65\
else\
int_ch2 = hex_char2-87; //// a \uc0\u30340 Ascll - 97\
\'a0\
int_ch = int_ch1+int_ch2;\
NSLog(@"int_ch=%d",int_ch);\
bytes[j] = int_ch;\'a0\'a0///\uc0\u23558 \u36716 \u21270 \u21518 \u30340 \u25968 \u25918 \u20837 Byte\u25968 \u32452 \u37324 \
j++;\
\}\
NSData *newData = [[NSData alloc] initWithBytes:bytes length:128];\
NSLog(@"newData=%@",newData);\
\
3. NSData \uc0\u19982  UIImage\
NSData\uc0\u65293 >UIImage\
UIImage *aimage = [UIImage imageWithData: imageData];\
\'a0\
//\uc0\u20363 \u65306 \u20174 \u26412 \u22320 \u25991 \u20214 \u27801 \u30418 \u20013 \u21462 \u22270 \u29255 \u24182 \u36716 \u25442 \u20026 NSData\
NSString *path = [[NSBundle mainBundle] bundlePath];\
NSString *name = [NSString stringWithFormat:@"ceshi.png"];\
NSString *finalPath = [path stringByAppendingPathComponent:name];\
NSData *imageData = [NSData dataWithContentsOfFile: finalPath];\
UIImage *aimage = [UIImage imageWithData: imageData];\
\
UIImage\uc0\u65293 > NSData\
NSData *imageData = UIImagePNGRepresentation(aimae);\
}