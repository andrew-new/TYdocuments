{\rtf1\ansi\ansicpg936\cocoartf1187\cocoasubrtf370
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 STHeitiSC-Light;\f2\fnil\fcharset0 Consolas;
}
{\colortbl;\red255\green255\blue255;\red199\green232\blue255;\red13\green19\blue31;\red255\green255\blue255;
\red217\green226\blue255;\red163\green42\blue47;\red34\green185\blue18;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 - (BOOL) connectedToNetwork\
\{\
    // 
\f1 \'b4\'b4\'bd\'a8\'c1\'e3\'b5\'d8\'d6\'b7\'a3\'ac
\f0 0.0.0.0
\f1 \'b5\'c4\'b5\'d8\'d6\'b7\'b1\'ed\'ca\'be\'b2\'e9\'d1\'af\'b1\'be\'bb\'fa\'b5\'c4\'cd\'f8\'c2\'e7\'c1\'ac\'bd\'d3\'d7\'b4\'cc\'ac
\f0 \
    struct sockaddr_in zeroAddress;\
    bzero(&zeroAddress, sizeof(zeroAddress));\
    zeroAddress.sin_len = sizeof(zeroAddress);\
    zeroAddress.sin_family = AF_INET;\
 \
    /**\
     *  SCNetworkReachabilityRef: 
\f1 \'d3\'c3\'c0\'b4\'b1\'a3\'b4\'e6\'b4\'b4\'bd\'a8\'b2\'e2\'ca\'d4\'c1\'ac\'bd\'d3\'b7\'b5\'bb\'d8\'b5\'c4\'d2\'fd\'d3\'c3
\f0 \
     *\
     *  SCNetworkReachabilityCreateWithAddress: 
\f1 \'b8\'f9\'be\'dd\'b4\'ab\'c8\'eb\'b5\'c4\'b5\'d8\'d6\'b7\'b2\'e2\'ca\'d4\'c1\'ac\'bd\'d3
\f0 .\
     *  
\f1 \'b5\'da\'d2\'bb\'b8\'f6\'b2\'ce\'ca\'fd\'bf\'c9\'d2\'d4\'ce\'aa
\f0 NULL
\f1 \'bb\'f2
\f0 kCFAllocatorDefault\
     *  
\f1 \'b5\'da\'b6\'fe\'b8\'f6\'b2\'ce\'ca\'fd\'ce\'aa\'d0\'e8\'d2\'aa\'b2\'e2\'ca\'d4\'c1\'ac\'bd\'d3\'b5\'c4
\f0 IP
\f1 \'b5\'d8\'d6\'b7
\f0 ,
\f1 \'b5\'b1\'ce\'aa
\f0 0.0.0.0
\f1 \'ca\'b1\'d4\'f2\'bf\'c9\'d2\'d4\'b2\'e9\'d1\'af\'b1\'be\'bb\'fa\'b5\'c4\'cd\'f8\'c2\'e7\'c1\'ac\'bd\'d3\'d7\'b4\'cc\'ac
\f0 .\
     *  
\f1 \'cd\'ac\'ca\'b1\'b7\'b5\'bb\'d8\'d2\'bb\'b8\'f6\'d2\'fd\'d3\'c3\'b1\'d8\'d0\'eb\'d4\'da\'d3\'c3\'cd\'ea\'ba\'f3\'ca\'cd\'b7\'c5
\f0 .\
     *  PS: SCNetworkReachabilityCreateWithName: 
\f1 \'d5\'e2\'b8\'f6\'ca\'c7\'b8\'f9\'be\'dd\'b4\'ab\'c8\'eb\'b5\'c4\'cd\'f8\'d6\'b7\'b2\'e2\'ca\'d4\'c1\'ac\'bd\'d3
\f0 ,\
     *  
\f1 \'b5\'da\'b6\'fe\'b8\'f6\'b2\'ce\'ca\'fd\'b1\'c8\'c8\'e7\'ce\'aa
\f0 "www.apple.com",
\f1 \'c6\'e4\'cb\'fb\'ba\'cd\'c9\'cf\'d2\'bb\'b8\'f6\'d2\'bb\'d1\'f9
\f0 .\
     *\
     *  SCNetworkReachabilityGetFlags: 
\f1 \'d5\'e2\'b8\'f6\'ba\'af\'ca\'fd\'d3\'c3\'c0\'b4\'bb\'f1\'b5\'c3\'b2\'e2\'ca\'d4\'c1\'ac\'bd\'d3\'b5\'c4\'d7\'b4\'cc\'ac
\f0 ,\
     *  
\f1 \'b5\'da\'d2\'bb\'b8\'f6\'b2\'ce\'ca\'fd\'ce\'aa\'d6\'ae\'c7\'b0\'bd\'a8\'c1\'a2\'b5\'c4\'b2\'e2\'ca\'d4\'c1\'ac\'bd\'d3\'b5\'c4\'d2\'fd\'d3\'c3
\f0 ,\
     *  
\f1 \'b5\'da\'b6\'fe\'b8\'f6\'b2\'ce\'ca\'fd\'d3\'c3\'c0\'b4\'b1\'a3\'b4\'e6\'bb\'f1\'b5\'c3\'b5\'c4\'d7\'b4\'cc\'ac
\f0 ,\
     *  
\f1 \'c8\'e7\'b9\'fb\'c4\'dc\'bb\'f1\'b5\'c3\'d7\'b4\'cc\'ac\'d4\'f2\'b7\'b5\'bb\'d8
\f0 TRUE
\f1 \'a3\'ac\'b7\'f1\'d4\'f2\'b7\'b5\'bb\'d8
\f0 FALSE\
     *\
     */\
    SCNetworkReachabilityRef defaultRouteReachability = SCNetworkReachabilityCreateWithAddress(NULL, (struct sockaddr *)&zeroAddress);\
    SCNetworkReachabilityFlags flags;\
 \
    BOOL didRetrieveFlags = SCNetworkReachabilityGetFlags(defaultRouteReachability, &flags);\
    CFRelease(defaultRouteReachability);\
 \
    if (!didRetrieveFlags)\
    \{\
        printf("Error. Could not recover network reachability flagsn");\
        return NO;\
    \}\
 \
    /**\
     *  kSCNetworkReachabilityFlagsReachable: 
\f1 \'c4\'dc\'b9\'bb\'c1\'ac\'bd\'d3\'cd\'f8\'c2\'e7
\f0 \
     *  kSCNetworkReachabilityFlagsConnectionRequired: 
\f1 \'c4\'dc\'b9\'bb\'c1\'ac\'bd\'d3\'cd\'f8\'c2\'e7
\f0 ,
\f1 \'b5\'ab\'ca\'c7\'ca\'d7\'cf\'c8\'b5\'c3\'bd\'a8\'c1\'a2\'c1\'ac\'bd\'d3\'b9\'fd\'b3\'cc
\f0 \
     *  kSCNetworkReachabilityFlagsIsWWAN: 
\f1 \'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'cd\'a8\'b9\'fd\'b7\'e4\'ce\'d1\'cd\'f8\'b8\'b2\'b8\'c7\'b5\'c4\'c1\'ac\'bd\'d3
\f0 ,\
     *  
\f1 \'b1\'c8\'c8\'e7
\f0 EDGE,GPRS
\f1 \'bb\'f2\'d5\'df\'c4\'bf\'c7\'b0\'b5\'c4
\f0 3G.
\f1 \'d6\'f7\'d2\'aa\'ca\'c7\'c7\'f8\'b1\'f0\'cd\'a8\'b9\'fd
\f0 WiFi
\f1 \'b5\'c4\'c1\'ac\'bd\'d3
\f0 .\
     *\
     */\
    BOOL isReachable = ((flags & kSCNetworkFlagsReachable) != 0);\
    BOOL needsConnection = ((flags & kSCNetworkFlagsConnectionRequired) != 0);\
    return (isReachable && !needsConnection) ? YES : NO;\
\}\

\f1 \
\
\
\
\pard\pardeftab720\sl280

\f2\fs26 \cf2 \cb3 +(\cf4 BOOL\cf2 )connectedToNetwork\{\cf4 \
\'a0\'a0\'a0\'a0\cf2 struct sockaddr_in zeroAddress;\cf4 \
\'a0\'a0\'a0\'a0\cf2 bzero(&zeroAddress;, sizeof(zeroAddress));\cf4 \
\'a0\'a0\'a0\'a0\cf2 zeroAddress\cf5 .sin_len\cf4  \cf2 = sizeof(zeroAddress);\cf4 \
\'a0\'a0\'a0\'a0\cf2 zeroAddress\cf5 .sin_family\cf4  \cf2 = \cf6 AF_INET\cf2 ;\cf4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf6 SCNetworkReachabilityRef\cf4  \cf2 defaultRouteReachability = SCNetworkReachabilityCreateWithAddress(\cf6 NULL\cf2 , (struct \cf6 sockaddr\cf4  \cf2 *)&zeroAddress;);\cf4 \
\'a0\'a0\'a0\'a0\cf6 SCNetworkReachabilityFlags\cf4  \cf2 flags;\cf4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf6 BOOL\cf4  \cf2 didRetrieveFlags = SCNetworkReachabilityGetFlags(defaultRouteReachability, &flags;);\cf4 \
\'a0\'a0\'a0\'a0\cf2 CFRelease(defaultRouteReachability);\cf4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0if \cf2 (!didRetrieveFlags)\cf4 \
\'a0\'a0\'a0\'a0\cf2 \{\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 NSLog(\cf7 @"Error. Could not recover network reachability flags"\cf2 );\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0return \cf6 NO\cf2 ;\cf4 \
\'a0\'a0\'a0\'a0\cf2 \}\cf4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf6 BOOL\cf4  \cf2 isReachable = flags & kSCNetworkFlagsReachable;\cf4 \
\'a0\'a0\'a0\'a0\cf6 BOOL\cf4  \cf2 needsConnection = flags & kSCNetworkFlagsConnectionRequired;\cf4 \
\'a0\'a0\'a0\'a0return \cf2 (isReachable && !needsConnection) ? \cf4 YES \cf2 : \cf4 NO\cf2 ;\cf4 \
\cf2 \}\cf4 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1\fs24 \cf0 \cb1 \

\f0 \
}