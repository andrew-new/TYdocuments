{\rtf1\ansi\ansicpg936\cocoartf1187\cocoasubrtf370
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset134 STHeitiSC-Light;\f2\fnil\fcharset0 Consolas;
}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red163\green42\blue47;\red13\green19\blue31;
\red199\green232\blue255;\red253\green154\blue48;\red34\green185\blue18;\red217\green226\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa200

\f0\b\fs32 \cf0 \cb2 NSTimer
\f1 \'d4\'da\'ba\'f3\'cc\'a8\'d4\'cb\'d0\'d0
\f0 \
\pard\pardeftab720

\f1\b0\fs28 \cf0 \cb1 \'d5\'e2\'b6\'ce\'b4\'fa\'c2\'eb\'bf\'c9\'d2\'d4\'b7\'c5\'d4\'da
\f0 - (void)applicationWillResignActive:(UIApplication *)application
\f1 \'bb\'f2\'d5\'df
\f0 - (void)applicationDidEnterBackground:(UIApplication *)application \

\f1 \'d6\'d0\'a3\'ac\'b5\'b1\'c8\'bb\'a3\'ac\'b5\'b1\'b3\'cc\'d0\'f2\'d6\'d8\'d0\'c2\'b1\'bb\'bc\'a4\'bb\'ee\'b5\'c4\'ca\'b1\'ba\'f2\'a3\'ac\'d0\'e8\'d2\'aa\'bd\'ab
\f0 timer invalidate
\f1 \'b5\'f4\'a1\'a3
\f0 \
\pard\pardeftab720\sl280

\f2\fs26 \cf3 \cb4 UIApplication\cf2  \cf5 *app = [\cf3 UIApplication\cf2  \cf6 sharedApplication\cf5 ];\cf2 \
\pard\pardeftab720\sl280
\cf5 __block \cf3 UIBackgroundTaskIdentifier\cf2  \cf5 bgTask = [app\cf2  \cf6 beginBackgroundTaskWithExpirationHandler\cf5 :^\{\cf2 \
\'a0\'a0\'a0\'a0\cf5 dispatch_async(dispatch_get_main_queue(), ^\{\cf2 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0if \cf5 (bgTask != UIBackgroundTaskInvalid) \{\cf2 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 [app\cf2  \cf6 endBackgroundTask\cf5 :bgTask];\cf2 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 bgTask = \cf3 UIBackgroundTaskInvalid\cf5 ;\cf2 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \}\cf2 \
\'a0\'a0\'a0\'a0\cf5 \});\cf2 \
\cf5 \}];\cf2 \
\cf5 dispatch_async(dispatch_get_global_queue(\cf3 DISPATCH_QUEUE_PRIORITY_DEFAULT\cf5 , \cf7 0\cf5 ), ^\{\cf2 \
\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 testTimer = [\cf3 NSTimer\cf2  \cf6 scheduledTimerWithTimeInterval\cf5 :(\cf7 0\cf8 .01\cf5 )\cf2  \cf6 target\cf5 :\cf2 self \cf6 selector\cf5 :\cf2 @selector\cf5 (doSomeTest)\cf2  \cf6 userInfo\cf2 :nil \cf6 repeats\cf5 :\cf2 YES\cf5 ];\cf2 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 [testTimer\cf2  \cf6 fire\cf5 ];\cf2 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 [[\cf3 NSRunLoop\cf2  \cf6 currentRunLoop\cf5 ]\cf2  \cf6 addTimer\cf5 :testTimer\cf2  \cf6 forMode\cf5 :NSRunLoopCommonModes];\cf2 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 [[\cf3 NSRunLoop\cf2  \cf6 currentRunLoop\cf5 ]\cf2  \cf6 run\cf5 ];\cf2 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 dispatch_async(dispatch_get_main_queue(), ^\{\cf2 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0if \cf5 (bgTask != UIBackgroundTaskInvalid) \{\cf2 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 [app\cf2  \cf6 endBackgroundTask\cf5 :bgTask];\cf2 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 bgTask = \cf3 UIBackgroundTaskInvalid\cf5 ;\cf2 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \}\cf2 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 \});\cf2 \
\cf5 \});\cf2 \
}