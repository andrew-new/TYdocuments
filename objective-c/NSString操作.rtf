{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 Tahoma;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;\red98\green147\blue254;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa200

\f0\fs40 \cf2 \cb0 NSString
\f1 \'d7\'d6\'b7\'fb\'b4\'ae\'b3\'a3\'d3\'c3\'b7\'bd\'b7\'a8
\f0 \
\pard\pardeftab720\sl420

\fs28 \cf2 /*******************************************************************************************\
NSString\
*******************************************************************************************/\
//
\f1 \'d2\'bb\'a1\'a2
\f0 NSString\'a0\'a0\'a0 \
/*----------------
\f1 \'b4\'b4\'bd\'a8\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'b7\'bd\'b7\'a8
\f0 ----------------*/\
\
//1
\f1 \'a1\'a2\'b4\'b4\'bd\'a8\'b3\'a3\'c1\'bf\'d7\'d6\'b7\'fb\'b4\'ae\'a1\'a3
\f0 \
NSString *astring = @"This is a String!";\
\
\
//2
\f1 \'a1\'a2\'b4\'b4\'bd\'a8\'bf\'d5\'d7\'d6\'b7\'fb\'b4\'ae\'a3\'ac\'b8\'f8\'d3\'e8\'b8\'b3\'d6\'b5\'a1\'a3
\f0 \
\
NSString *astring = [[NSString alloc] init];\
astring = @"This is a String!";\
[astring release];\
NSLog(@"astring:%@",astring);\
//\
\
NSString *astring = [[NSString alloc] init];\
NSLog(@"0x%.8x", astring);\
astring=@"This is a String!";\
NSLog(@"0x%.8x", astring);\
[astring release];\
NSLog(@"astring:%@",astring);\
\
\
\
\
//3
\f1 \'a1\'a2\'d4\'da\'d2\'d4\'c9\'cf\'b7\'bd\'b7\'a8\'d6\'d0\'a3\'ac\'cc\'e1\'c9\'fd\'cb\'d9\'b6\'c8
\f0 :initWithString
\f1 \'b7\'bd\'b7\'a8
\f0 \
\
NSString *astring = [[NSString alloc] initWithString:@"This is a String!"];\
NSLog(@"astring:%@",astring);\
[astring release];\
\
\
\
//4
\f1 \'a1\'a2\'d3\'c3\'b1\'ea\'d7\'bc
\f0 c
\f1 \'b4\'b4\'bd\'a8\'d7\'d6\'b7\'fb\'b4\'ae
\f0 :initWithCString
\f1 \'b7\'bd\'b7\'a8
\f0 \
\
char *Cstring = "This is a String!";\
NSString *astring = [[NSString alloc] initWithCString:Cstring];\
NSLog(@"astring:%@",astring);\
[astring release];\
\
\
\
//5
\f1 \'a1\'a2\'b4\'b4\'bd\'a8\'b8\'f1\'ca\'bd\'bb\'af\'d7\'d6\'b7\'fb\'b4\'ae
\f0 :
\f1 \'d5\'bc\'ce\'bb\'b7\'fb\'a3\'a8\'d3\'c9\'d2\'bb\'b8\'f6
\f0 %
\f1 \'bc\'d3\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'d7\'e9\'b3\'c9\'a3\'a9
\f0 \
\
int i = 1;\
int j = 2;\
NSString *astring = [[NSString alloc] initWithString:[NSString stringWithFormat:@"%d.This is %i string!",i,j]];\
NSLog(@"astring:%@",astring);\
[astring release];\
\
\
\
//6
\f1 \'a1\'a2\'b4\'b4\'bd\'a8\'c1\'d9\'ca\'b1\'d7\'d6\'b7\'fb\'b4\'ae
\f0 \
\
NSString *astring;\
astring = [NSString stringWithCString:"This is a temporary string"];\
NSLog(@"astring:%@",astring);\
\
\
\
\
/*----------------
\f1 \'b4\'d3\'ce\'c4\'bc\'fe\'b6\'c1\'c8\'a1\'d7\'d6\'b7\'fb\'b4\'ae
\f0 :initWithContentsOfFile
\f1 \'b7\'bd\'b7\'a8
\f0 ----------------*/\'a0\'a0\'a0 \
\
NSString *path = @"astring.text";\
NSString *astring = [[NSString alloc] initWithContentsOfFile:path];\
NSLog(@"astring:%@",astring);\
[astring release];\
\
\
/*----------------
\f1 \'d0\'b4\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'bd\'ce\'c4\'bc\'fe
\f0 :writeToFile
\f1 \'b7\'bd\'b7\'a8
\f0 ----------------*/\'a0\'a0\'a0 \
\
\
NSString *astring = [[NSString alloc] initWithString:@"This is a String!"];\
NSLog(@"astring:%@",astring);\
NSString *path = @"astring.text";\'a0\'a0\'a0 \
[astring writeToFile: path atomically: YES];\
[astring release];\'a0\'a0\'a0 \
\
\
\
\
/*----------------
\f1 \'b1\'c8\'bd\'cf\'c1\'bd\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae
\f0 ----------------*/\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \
\
//
\f1 \'d3\'c3
\f0 C
\f1 \'b1\'c8\'bd\'cf
\f0 :strcmp
\f1 \'ba\'af\'ca\'fd
\f0 \
\
char string1[] = "string!";\
char string2[] = "string!";\
if(strcmp(string1, string2) = = 0)\
\{\
NSLog(@"1");\
\}\
\
\
\
//isEqualToString
\f1 \'b7\'bd\'b7\'a8
\f0 \'a0\'a0\'a0 \
NSString *astring01 = @"This is a String!";\
NSString *astring02 = @"This is a String!";\
BOOL result = [astring01 isEqualToString:astring02];\
NSLog(@"result:%d",result);\
\
\
\
\
//compare
\f1 \'b7\'bd\'b7\'a8
\f0 (comparer
\f1 \'b7\'b5\'bb\'d8\'b5\'c4\'c8\'fd\'d6\'d6\'d6\'b5
\f0 )\'a0\'a0\'a0 \
NSString *astring01 = @"This is a String!";\
NSString *astring02 = @"This is a String!";\'a0\'a0\'a0 \
BOOL result = [astring01 compare:astring02] = = NSOrderedSame;\'a0\'a0\'a0 \
NSLog(@"result:%d",result);\'a0\'a0\'a0 \
//NSOrderedSame
\f1 \'c5\'d0\'b6\'cf\'c1\'bd\'d5\'df\'c4\'da\'c8\'dd\'ca\'c7\'b7\'f1\'cf\'e0\'cd\'ac
\f0 \
\
\
\
\
NSString *astring01 = @"This is a String!";\
NSString *astring02 = @"this is a String!";\
BOOL result = [astring01 compare:astring02] = = NSOrderedAscending;\'a0\'a0\'a0 \
NSLog(@"result:%d",result);\
//NSOrderedAscending
\f1 \'c5\'d0\'b6\'cf\'c1\'bd\'b6\'d4\'cf\'f3\'d6\'b5\'b5\'c4\'b4\'f3\'d0\'a1
\f0 (
\f1 \'b0\'b4\'d7\'d6\'c4\'b8\'cb\'b3\'d0\'f2\'bd\'f8\'d0\'d0\'b1\'c8\'bd\'cf\'a3\'ac
\f0 astring02
\f1 \'b4\'f3\'d3\'da
\f0 astring01
\f1 \'ce\'aa\'d5\'e6
\f0 )\
\
\
\
NSString *astring01 = @"this is a String!";\
NSString *astring02 = @"This is a String!";\
BOOL result = [astring01 compare:astring02] = = NSOrderedDescending;\'a0\'a0\'a0 \
NSLog(@"result:%d",result);\'a0\'a0\'a0\'a0 \
//NSOrderedDescending
\f1 \'c5\'d0\'b6\'cf\'c1\'bd\'b6\'d4\'cf\'f3\'d6\'b5\'b5\'c4\'b4\'f3\'d0\'a1
\f0 (
\f1 \'b0\'b4\'d7\'d6\'c4\'b8\'cb\'b3\'d0\'f2\'bd\'f8\'d0\'d0\'b1\'c8\'bd\'cf\'a3\'ac
\f0 astring02
\f1 \'d0\'a1\'d3\'da
\f0 astring01
\f1 \'ce\'aa\'d5\'e6
\f0 )\
\
\
\
//
\f1 \'b2\'bb\'bf\'bc\'c2\'c7\'b4\'f3\'d0\'a1\'d0\'b4\'b1\'c8\'bd\'cf\'d7\'d6\'b7\'fb\'b4\'ae
\f0 1\
NSString *astring01 = @"this is a String!";\
NSString *astring02 = @"This is a String!";\
BOOL result = [astring01 caseInsensitiveCompare:astring02] = = NSOrderedSame;\'a0\'a0\'a0 \
NSLog(@"result:%d",result);\'a0\'a0\'a0\'a0 \
//NSOrderedDescending
\f1 \'c5\'d0\'b6\'cf\'c1\'bd\'b6\'d4\'cf\'f3\'d6\'b5\'b5\'c4\'b4\'f3\'d0\'a1
\f0 (
\f1 \'b0\'b4\'d7\'d6\'c4\'b8\'cb\'b3\'d0\'f2\'bd\'f8\'d0\'d0\'b1\'c8\'bd\'cf\'a3\'ac
\f0 astring02
\f1 \'d0\'a1\'d3\'da
\f0 astring01
\f1 \'ce\'aa\'d5\'e6
\f0 )\
\
\
\
//
\f1 \'b2\'bb\'bf\'bc\'c2\'c7\'b4\'f3\'d0\'a1\'d0\'b4\'b1\'c8\'bd\'cf\'d7\'d6\'b7\'fb\'b4\'ae
\f0 2\
NSString *astring01 = @"this is a String!";\
NSString *astring02 = @"This is a String!";\
BOOL result = [astring01 compare:astring02\
options:NSCaseInsensitiveSearch | NSNumericSearch] = = NSOrderedSame;\'a0\'a0\'a0 \
NSLog(@"result:%d",result);\'a0\'a0\'a0\'a0 \
\
//NSCaseInsensitiveSearch:
\f1 \'b2\'bb\'c7\'f8\'b7\'d6\'b4\'f3\'d0\'a1\'d0\'b4\'b1\'c8\'bd\'cf
\f0  NSLiteralSearch:
\f1 \'bd\'f8\'d0\'d0\'cd\'ea\'c8\'ab\'b1\'c8\'bd\'cf\'a3\'ac\'c7\'f8\'b7\'d6\'b4\'f3\'d0\'a1\'d0\'b4
\f0  NSNumericSearch:
\f1 \'b1\'c8\'bd\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'d7\'d6\'b7\'fb\'b8\'f6\'ca\'fd\'a3\'ac\'b6\'f8\'b2\'bb\'ca\'c7\'d7\'d6\'b7\'fb\'d6\'b5\'a1\'a3
\f0 \
\
\
/*----------------
\f1 \'b8\'c4\'b1\'e4\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'b4\'f3\'d0\'a1\'d0\'b4
\f0 ----------------*/\'a0\'a0\'a0 \
\
NSString *string1 = @"A String"; \
NSString *string2 = @"String"; \
NSLog(@"string1:%@",[string1 uppercaseString]);//
\f1 \'b4\'f3\'d0\'b4
\f0 \
NSLog(@"string2:%@",[string2 lowercaseString]);//
\f1 \'d0\'a1\'d0\'b4
\f0 \
NSLog(@"string2:%@",[string2 capitalizedString]);//
\f1 \'ca\'d7\'d7\'d6\'c4\'b8\'b4\'f3\'d0\'a1
\f0 \
\
\
/*----------------
\f1 \'d4\'da\'b4\'ae\'d6\'d0\'cb\'d1\'cb\'f7\'d7\'d3\'b4\'ae
\f0 ----------------*/\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \
\
NSString *string1 = @"This is a string";\
NSString *string2 = @"string";\
NSRange range = [string1 rangeOfString:string2];\
int location = range.location;\
int leight = range.length;\
NSString *astring = [[NSString alloc] initWithString:[NSString stringWithFormat:@"Location:%i,Leight:%i",location,leight]];\
NSLog(@"astring:%@",astring);\
[astring release];\
\
\
/*----------------
\f1 \'b3\'e9\'c8\'a1\'d7\'d3\'b4\'ae
\f0  ----------------*/\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \
\
//-substringToIndex: 
\f1 \'b4\'d3\'d7\'d6\'b7\'fb\'b4\'ae\'b5\'c4\'bf\'aa\'cd\'b7\'d2\'bb\'d6\'b1\'bd\'d8\'c8\'a1\'b5\'bd\'d6\'b8\'b6\'a8\'b5\'c4\'ce\'bb\'d6\'c3\'a3\'ac\'b5\'ab\'b2\'bb\'b0\'fc\'c0\'a8\'b8\'c3\'ce\'bb\'d6\'c3\'b5\'c4\'d7\'d6\'b7\'fb
\f0 \
NSString *string1 = @"This is a string";\
NSString *string2 = [string1 substringToIndex:3];\
NSLog(@"string2:%@",string2);\
\
\
\
\
//-substringFromIndex: 
\f1 \'d2\'d4\'d6\'b8\'b6\'a8\'ce\'bb\'d6\'c3\'bf\'aa\'ca\'bc\'a3\'a8\'b0\'fc\'c0\'a8\'d6\'b8\'b6\'a8\'ce\'bb\'d6\'c3\'b5\'c4\'d7\'d6\'b7\'fb\'a3\'a9\'a3\'ac\'b2\'a2\'b0\'fc\'c0\'a8\'d6\'ae\'ba\'f3\'b5\'c4\'c8\'ab\'b2\'bf\'d7\'d6\'b7\'fb
\f0 \
NSString *string1 = @"This is a string";\
NSString *string2 = [string1 substringFromIndex:3];\
NSLog(@"string2:%@",string2);\
\
\
\
\
//-substringWithRange: //
\f1 \'b0\'b4\'d5\'d5\'cb\'f9\'b8\'f8\'b3\'f6\'b5\'c4\'ce\'bb\'d6\'c3\'a3\'ac\'b3\'a4\'b6\'c8\'a3\'ac\'c8\'ce\'d2\'e2\'b5\'d8\'b4\'d3\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'bd\'d8\'c8\'a1\'d7\'d3\'b4\'ae
\f0 \
NSString *string1 = @"This is a string";\
NSString *string2 = [string1 substringWithRange:NSMakeRange(0, 4)];\
NSLog(@"string2:%@",string2);\
\
\
//
\f1 \'c0\'a9\'d5\'b9\'c2\'b7\'be\'b6
\f0 \
\
NSString *Path = @"~/NSData.txt";\
NSString *absolutePath = [Path stringByExpandingTildeInPath];\
NSLog(@"absolutePath:%@",absolutePath);\
NSLog(@"Path:%@",[absolutePath stringByAbbreviatingWithTildeInPath]);\
\
\
\
//
\f1 \'ce\'c4\'bc\'fe\'c0\'a9\'d5\'b9\'c3\'fb
\f0 \
NSString *Path = @"~/NSData.txt";\
NSLog(@"Extension:%@",[Path pathExtension]);\
\
\
\
\
/*******************************************************************************************\
NSMutableString\
*******************************************************************************************/\'a0\'a0\'a0 \
\
/*---------------
\f1 \'b8\'f8\'d7\'d6\'b7\'fb\'b4\'ae\'b7\'d6\'c5\'e4\'c8\'dd\'c1\'bf
\f0 ----------------*/\
//stringWithCapacity:\
NSMutableString *String;\
String = [NSMutableString stringWithCapacity:40];\
\
\
/*---------------
\f1 \'d4\'da\'d2\'d1\'d3\'d0\'d7\'d6\'b7\'fb\'b4\'ae\'ba\'f3\'c3\'e6\'cc\'ed\'bc\'d3\'d7\'d6\'b7\'fb
\f0 ----------------*/\'a0\'a0\'a0 \
\
//appendString: and appendFormat:\
\
NSMutableString *String1 = [[NSMutableString alloc] initWithString:@"This is a NSMutableString"];\
//[String1 appendString:@", I will be adding some character"];\
[String1 appendFormat:[NSString stringWithFormat:@", I will be adding some character"]];\
NSLog(@"String1:%@",String1);\
*/\
\
\
/*--------
\f1 \'d4\'da\'d2\'d1\'d3\'d0\'d7\'d6\'b7\'fb\'b4\'ae\'d6\'d0\'b0\'b4\'d5\'d5\'cb\'f9\'b8\'f8\'b3\'f6\'b7\'b6\'ce\'a7\'ba\'cd\'b3\'a4\'b6\'c8\'c9\'be\'b3\'fd\'d7\'d6\'b7\'fb
\f0 ------*/\'a0\'a0\'a0 \
/*\
//deleteCharactersInRange:\
NSMutableString *String1 = [[NSMutableString alloc] initWithString:@"This is a NSMutableString"];\
[String1 deleteCharactersInRange:NSMakeRange(0, 5)];\
NSLog(@"String1:%@",String1);\
\
\
\
/*--------
\f1 \'d4\'da\'d2\'d1\'d3\'d0\'d7\'d6\'b7\'fb\'b4\'ae\'ba\'f3\'c3\'e6\'d4\'da\'cb\'f9\'d6\'b8\'b6\'a8\'b5\'c4\'ce\'bb\'d6\'c3\'d6\'d0\'b2\'e5\'c8\'eb\'b8\'f8\'b3\'f6\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae
\f0 ------*/\
\
//-insertString: atIndex:\
NSMutableString *String1 = [[NSMutableString alloc] initWithString:@"This is a NSMutableString"];\
[String1 insertString:@"Hi! " atIndex:0];\
NSLog(@"String1:%@",String1);\
\
\
\
/*--------
\f1 \'bd\'ab\'d2\'d1\'d3\'d0\'b5\'c4\'bf\'d5\'b7\'fb\'b4\'ae\'bb\'bb\'b3\'c9\'c6\'e4\'cb\'fc\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae
\f0 ------*/\
\
//-setString:\
NSMutableString *String1 = [[NSMutableString alloc] initWithString:@"This is a NSMutableString"];\
[String1 setString:@"Hello Word!"];\
NSLog(@"String1:%@",String1);\
\
\
\
/*--------
\f1 \'b0\'b4\'d5\'d5\'cb\'f9\'b8\'f8\'b3\'f6\'b5\'c4\'b7\'b6\'ce\'a7\'a3\'ac\'ba\'cd\'d7\'d6\'b7\'fb\'b4\'ae\'cc\'e6\'bb\'bb\'b5\'c4\'d4\'ad\'d3\'d0\'b5\'c4\'d7\'d6\'b7\'fb
\f0 ------*/\
\
//-setString:\
NSMutableString *String1 = [[NSMutableString alloc] initWithString:@"This is a NSMutableString"];\
[String1 replaceCharactersInRange:NSMakeRange(0, 4) withString:@"That"];\
NSLog(@"String1:%@",String1);\
\
\
\
/*-------------
\f1 \'c5\'d0\'b6\'cf\'d7\'d6\'b7\'fb\'b4\'ae\'c4\'da\'ca\'c7\'b7\'f1\'bb\'b9\'b0\'fc\'ba\'ac\'b1\'f0\'b5\'c4\'d7\'d6\'b7\'fb\'b4\'ae
\f0 (
\f1 \'c7\'b0\'d7\'ba\'a3\'ac\'ba\'f3\'d7\'ba
\f0 )-------------*/\
//01
\f1 \'a3\'ba\'bc\'ec\'b2\'e9\'d7\'d6\'b7\'fb\'b4\'ae\'ca\'c7\'b7\'f1\'d2\'d4\'c1\'ed\'d2\'bb\'b8\'f6\'d7\'d6\'b7\'fb\'b4\'ae\'bf\'aa\'cd\'b7
\f0 - (BOOL) hasPrefix: (NSString *) aString;\
NSString *String1 = @"NSStringInformation.txt";\
[String1 hasPrefix:@"NSString"] = = 1 ?\'a0 NSLog(@"YES") : NSLog(@"NO");\
[String1 hasSuffix:@".txt"] = = 1 ?\'a0 NSLog(@"YES") : NSLog(@"NO");\
\
//02
\f1 \'a3\'ba\'b2\'e9\'d5\'d2\'d7\'d6\'b7\'fb\'b4\'ae\'c4\'b3\'b4\'a6\'ca\'c7\'b7\'f1\'b0\'fc\'ba\'ac\'c6\'e4\'cb\'fc\'d7\'d6\'b7\'fb\'b4\'ae
\f0  - (NSRange) rangeOfString: (NSString *) aString
\f1 \'a3\'ac\'d5\'e2\'d2\'bb\'b5\'e3\'c7\'b0\'c3\'e6\'d4\'da\'b4\'ae\'d6\'d0\'cb\'d1\'cb\'f7\'d7\'d3\'b4\'ae\'d3\'c3\'b5\'bd\'b9\'fd
\f0 ;\
\
\
\
/*******************************************************************************************\
NSArray\
*******************************************************************************************/\
\
/*---------------------------
\f1 \'b4\'b4\'bd\'a8\'ca\'fd\'d7\'e9
\f0 ------------------------------*/\
//NSArray *array = [[NSArray alloc] initWithObjects:\
@"One",@"Two",@"Three",@"Four",nil];\
\
self.dataArray = array;\
[array release];\
\
//- (unsigned) Count;
\f1 \'ca\'fd\'d7\'e9\'cb\'f9\'b0\'fc\'ba\'ac\'b6\'d4\'cf\'f3\'b8\'f6\'ca\'fd\'a3\'bb
\f0 \
NSLog(@"self.dataArray cound:%d",[self.dataArray count]);\
\
//- (id) objectAtIndex: (unsigned int) index;
\f1 \'bb\'f1\'c8\'a1\'d6\'b8\'b6\'a8\'cb\'f7\'d2\'fd\'b4\'a6\'b5\'c4\'b6\'d4\'cf\'f3
\f0 ;\
NSLog(@"self.dataArray cound 2:%@",[self.dataArray objectAtIndex:2]);\
\
\
/*--------------------------
\f1 \'b4\'d3\'d2\'bb\'b8\'f6\'ca\'fd\'d7\'e9\'bf\'bd\'b1\'b4\'ca\'fd\'be\'dd\'b5\'bd\'c1\'ed\'d2\'bb\'ca\'fd\'d7\'e9
\f0 (
\f1 \'bf\'c9\'b1\'e4\'ca\'fd\'bc\'b6
\f0 )----------------------------*/\'a0\'a0\'a0 \
\
//arrayWithArray:\
//NSArray *array1 = [[NSArray alloc] init];\
NSMutableArray *MutableArray = [[NSMutableArray alloc] init];\
NSArray *array = [NSArray arrayWithObjects:\
@"a",@"b",@"c",nil];\
NSLog(@"array:%@",array);\
MutableArray = [NSMutableArray arrayWithArray:array];\
NSLog(@"MutableArray:%@",MutableArray);\
\
array1 = [NSArray arrayWithArray:array];\
NSLog(@"array1:%@",array1);\
\
\
//Copy\
\
//id obj;\
NSMutableArray *newArray = [[NSMutableArray alloc] init];\
NSArray *oldArray = [NSArray arrayWithObjects:\
@"a",@"b",@"c",@"d",@"e",@"f",@"g",@"h",nil];\
\
NSLog(@"oldArray:%@",oldArray);\
for(int i = 0; i < [oldArray count]; i++)\
\{\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \
obj = [[oldArray objectAtIndex:i] copy];\
[newArray addObject: obj];\
\}\
//\'a0\'a0\'a0\'a0 \
NSLog(@"newArray:%@", newArray);\
[newArray release];\
\
\
//
\f1 \'bf\'ec\'cb\'d9\'c3\'b6\'be\'d9
\f0 \
\
//NSMutableArray *newArray = [[NSMutableArray alloc] init];\
NSArray *oldArray = [NSArray arrayWithObjects:\
@"a",@"b",@"c",@"d",@"e",@"f",@"g",@"h",nil];\'a0\'a0\'a0 \
NSLog(@"oldArray:%@",oldArray);\
\
for(id obj in oldArray)\
\{\
[newArray addObject: obj];\
\}\
//\'a0\'a0\'a0\'a0 \
NSLog(@"newArray:%@", newArray);\
[newArray release];\'a0\'a0\'a0 \
\
\
//Deep copy\
\
//NSMutableArray *newArray = [[NSMutableArray alloc] init];\
NSArray *oldArray = [NSArray arrayWithObjects:\
@"a",@"b",@"c",@"d",@"e",@"f",@"g",@"h",nil];\'a0\'a0\'a0 \
NSLog(@"oldArray:%@",oldArray);\'a0\'a0\'a0 \
newArray = (NSMutableArray*)CFPropertyListCreateDeepCopy(kCFAllocatorDefault, (CFPropertyListRef)oldArray, kCFPropertyListMutableContainers);\
NSLog(@"newArray:%@", newArray);\
[newArray release];\'a0\'a0\'a0 \
\
\
//Copy and sort\
\
//NSMutableArray *newArray = [[NSMutableArray alloc] init];\
NSArray *oldArray = [NSArray arrayWithObjects:\
@"b",@"a",@"e",@"d",@"c",@"f",@"h",@"g",nil];\'a0\'a0\'a0 \
NSLog(@"oldArray:%@",oldArray);\
NSEnumerator *enumerator;\
enumerator = [oldArray objectEnumerator];\
id obj;\
while(obj = [enumerator nextObject])\
\{\
[newArray addObject: obj];\
\}\
[newArray sortUsingSelector:@selector(compare:)];\
NSLog(@"newArray:%@", newArray);\
[newArray release];\
\
\
\
/*---------------------------
\f1 \'c7\'d0\'b7\'d6\'ca\'fd\'d7\'e9
\f0 ------------------------------*/\
\
//
\f1 \'b4\'d3\'d7\'d6\'b7\'fb\'b4\'ae\'b7\'d6\'b8\'ee\'b5\'bd\'ca\'fd\'d7\'e9\'a3\'ad
\f0  componentsSeparatedByString:\
NSString *string = [[NSString alloc] initWithString:@"One,Two,Three,Four"];\
NSLog(@"string:%@",string);\'a0\'a0\'a0 \
NSArray *array = [string componentsSeparatedByString:@","];\
NSLog(@"array:%@",array);\
[string release];\
\
\
//
\f1 \'b4\'d3\'ca\'fd\'d7\'e9\'ba\'cf\'b2\'a2\'d4\'aa\'cb\'d8\'b5\'bd\'d7\'d6\'b7\'fb\'b4\'ae
\f0 - componentsJoinedByString:\
NSArray *array = [[NSArray alloc] initWithObjects:@"One",@"Two",@"Three",@"Four",nil];\
NSString *string = [array componentsJoinedByString:@","];\
NSLog(@"string:%@",string);\
\
\
\
/*******************************************************************************************\
NSMutableArray\
*******************************************************************************************/\
/*---------------
\f1 \'b8\'f8\'ca\'fd\'d7\'e9\'b7\'d6\'c5\'e4\'c8\'dd\'c1\'bf
\f0 ----------------*/\
//NSArray *array;\
array = [NSMutableArray arrayWithCapacity:20];\
\
\
\
/*--------------
\f1 \'d4\'da\'ca\'fd\'d7\'e9\'c4\'a9\'ce\'b2\'cc\'ed\'bc\'d3\'b6\'d4\'cf\'f3
\f0 ----------------*/\
//- (void) addObject: (id) anObject;\
//NSMutableArray *array = [NSMutableArray arrayWithObjects:\
@"One",@"Two",@"Three",nil];\
[array addObject:@"Four"];\
NSLog(@"array:%@",array);\
\
\
\
/*--------------
\f1 \'c9\'be\'b3\'fd\'ca\'fd\'d7\'e9\'d6\'d0\'d6\'b8\'b6\'a8\'cb\'f7\'d2\'fd\'b4\'a6\'b6\'d4\'cf\'f3
\f0 ----------------*/\'a0\'a0\'a0 \
//-(void) removeObjectAtIndex: (unsigned) index;\'a0\'a0\'a0 \
//NSMutableArray *array = [NSMutableArray arrayWithObjects:\
@"One",@"Two",@"Three",nil];\
[array removeObjectAtIndex:1];\
NSLog(@"array:%@",array);\
\
\
\
/*-------------
\f1 \'ca\'fd\'d7\'e9\'c3\'b6\'be\'d9
\f0 ---------------*/\'a0\'a0\'a0 \
//- (NSEnumerator *)objectEnumerator;
\f1 \'b4\'d3\'c7\'b0\'cf\'f2\'ba\'f3
\f0 \
//NSMutableArray *array = [NSMutableArray arrayWithObjects:\
@"One",@"Two",@"Three",nil];\
NSEnumerator *enumerator;\
enumerator = [array objectEnumerator];\
\
id thingie;\
while (thingie = [enumerator nextObject]) \{\
NSLog(@"thingie:%@",thingie);\
\}\
\
\
//- (NSEnumerator *)reverseObjectEnumerator;
\f1 \'b4\'d3\'ba\'f3\'cf\'f2\'c7\'b0
\f0 \
//NSMutableArray *array = [NSMutableArray arrayWithObjects:\
@"One",@"Two",@"Three",nil];\
NSEnumerator *enumerator;\
enumerator = [array reverseObjectEnumerator];\
\
id object;\
while (object = [enumerator nextObject]) \{\
NSLog(@"object:%@",object);\
\}\
\
\
//
\f1 \'bf\'ec\'cb\'d9\'c3\'b6\'be\'d9
\f0 \
//NSMutableArray *array = [NSMutableArray arrayWithObjects:\
@"One",@"Two",@"Three",nil];\
for(NSString *string in array)\
\{\
NSLog(@"string:%@",string);\
\}\
\
\
\
/*******************************************************************************************\
NSDictionary\
*******************************************************************************************/\
\
/*------------------------------------
\f1 \'b4\'b4\'bd\'a8\'d7\'d6\'b5\'e4
\f0 ------------------------------------*/\
//- (id) initWithObjectsAndKeys;\
\
//NSDictionary *dictionary = [[NSDictionary alloc] initWithObjectsAndKeys:@"One",@"1",@"Two",@"2",@"Three",@"3",nil];\
NSString *string = [dictionary objectForKey:@"One"];\
NSLog(@"string:%@",string);\
NSLog(@"dictionary:%@",dictionary);\
[dictionary release];\
\
\
/*******************************************************************************************\
NSMutableDictionary\
*******************************************************************************************/\
\
/*------------------------------------
\f1 \'b4\'b4\'bd\'a8\'bf\'c9\'b1\'e4\'d7\'d6\'b5\'e4
\f0 ------------------------------------*/\'a0\'a0\'a0 \
//
\f1 \'b4\'b4\'bd\'a8
\f0 \
NSMutableDictionary *dictionary = [NSMutableDictionary dictionary];\
\
//
\f1 \'cc\'ed\'bc\'d3\'d7\'d6\'b5\'e4
\f0 \
[dictionary setObject:@"One" forKey:@"1"];\
[dictionary setObject:@"Two" forKey:@"2"];\
[dictionary setObject:@"Three" forKey:@"3"];\
[dictionary setObject:@"Four" forKey:@"4"];\
NSLog(@"dictionary:%@",dictionary);\
\
//
\f1 \'c9\'be\'b3\'fd\'d6\'b8\'b6\'a8\'b5\'c4\'d7\'d6\'b5\'e4
\f0 \
[dictionary removeObjectForKey:@"3"];\
NSLog(@"dictionary:%@",dictionary);\
\
\
/*******************************************************************************************\
NSValue
\f1 \'a3\'a8\'b6\'d4\'c8\'ce\'ba\'ce\'b6\'d4\'cf\'f3\'bd\'f8\'d0\'d0\'b0\'fc\'d7\'b0\'a3\'a9
\f0 \
*******************************************************************************************/\
\
/*--------------------------------
\f1 \'bd\'ab
\f0 NSRect
\f1 \'b7\'c5\'c8\'eb
\f0 NSArray
\f1 \'d6\'d0
\f0 ------------------------------------*/\'a0\'a0\'a0 \
//
\f1 \'bd\'ab
\f0 NSRect
\f1 \'b7\'c5\'c8\'eb
\f0 NSArray
\f1 \'d6\'d0
\f0 \
NSMutableArray *array = [[NSMutableArray alloc] init];\
NSValue *value;\
CGRect rect = CGRectMake(0, 0, 320, 480);\'a0\'a0\'a0 \
value = [NSValue valueWithBytes:&rect objCType:@encode(CGRect)];\
[array addObject:value];\
NSLog(@"array:%@",array);\
\
//
\f1 \'b4\'d3
\f0 Array
\f1 \'d6\'d0\'cc\'e1\'c8\'a1
\f0 \
value = [array objectAtIndex:0];\
[value getValue:&rect];\
NSLog(@"value:%@",value);\
\
\
/*******************************************************************************************\

\f1 \'b4\'d3\'c4\'bf\'c2\'bc\'cb\'d1\'cb\'f7\'c0\'a9\'d5\'b9\'c3\'fb\'ce\'aa
\f0 jpg
\f1 \'b5\'c4\'ce\'c4\'bc\'fe
\f0 \
*******************************************************************************************/\
\
//NSFileManager *fileManager = [NSFileManager defaultManager];\
NSString *home;\
home = @"../Users/";\
\
NSDirectoryEnumerator *direnum;\
direnum = [fileManager enumeratorAtPath: home];\
\
NSMutableArray *files = [[NSMutableArray alloc] init];\
\
//
\f1 \'c3\'b6\'be\'d9
\f0 \
NSString *filename;\
while (filename = [direnum nextObject]) \{\
if([[filename pathExtension] hasSuffix:@"jpg"])\{\
[files addObject:filename];\
\}\
\}\
\
//
\f1 \'bf\'ec\'cb\'d9\'c3\'b6\'be\'d9
\f0 \
//for(NSString *filename in direnum)\
//\{\
//\'a0\'a0\'a0 if([[filename pathExtension] isEqualToString:@"jpg"])\{\
//\'a0\'a0\'a0\'a0\'a0\'a0\'a0 [files addObject:filename];\
//\'a0\'a0\'a0 \}\
//\}\
NSLog(@"files:%@",files);\
\
//
\f1 \'c3\'b6\'be\'d9
\f0 \
NSEnumerator *filenum;\
filenum = [files objectEnumerator];\
while (filename = [filenum nextObject]) \{\
NSLog(@"filename:%@",filename);\
\}\
\
//
\f1 \'bf\'ec\'cb\'d9\'c3\'b6\'be\'d9
\f0 \
//for(id object in files)\
//\{\
//\'a0\'a0\'a0 NSLog(@"object:%@",object);\
//\}\
}