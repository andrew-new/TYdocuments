{\rtf1\ansi\ansicpg936\cocoartf1187\cocoasubrtf370
{\fonttbl\f0\fnil\fcharset0 Consolas;}
{\colortbl;\red255\green255\blue255;\red199\green232\blue255;\red13\green19\blue31;\red163\green42\blue47;
\red255\green255\blue255;\red253\green154\blue48;\red34\green185\blue18;\red53\green117\blue213;\red217\green226\blue255;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280

\f0\fs26 \cf2 \cb3 + (\cf4 UIColor\cf5  \cf2 *)\cf5  \cf6 colorFromHexRGB\cf2 :(\cf4 NSString\cf5  \cf2 *) inColorString\cf5 \
\cf2 \{\cf5 \
\'a0\cf4 UIColor\cf5  \cf2 *result =\cf5  nil\cf2 ;\cf5 \
\'a0\cf2 unsigned \cf5 int \cf2 colorCode = \cf7 0\cf2 ;\cf5 \
\'a0\cf2 unsigned \cf5 char \cf2 redByte, greenByte, blueByte;\cf5 \
\'a0\'a0\
\'a0if \cf2 (nil != inColorString)\cf5 \
\'a0\cf2 \{\cf5 \
\'a0\'a0\cf4 NSScanner\cf5  \cf2 *scanner = [\cf4 NSScanner\cf5  \cf6 scannerWithString\cf2 :inColorString];\cf5 \
\'a0\'a0\cf2 (\cf5 void\cf2 ) [scanner\cf5  \cf6 scanHexInt\cf2 :&colorCode;]; \cf8 // ignore error\cf5 \
\'a0\cf2 \}\cf5 \
\'a0\cf2 redByte = (unsigned \cf5 char\cf2 ) (colorCode >> \cf7 16\cf2 );\cf5 \
\'a0\cf2 greenByte = (unsigned \cf5 char\cf2 ) (colorCode >> \cf7 8\cf2 );\cf5 \
\'a0\cf2 blueByte = (unsigned \cf5 char\cf2 ) (colorCode); \cf8 // masks off high bits\cf5 \
\'a0\cf2 result = [UIColor\cf5 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 colorWithRed\cf2 : (\cf5 float\cf2 )redByte / \cf7 0\cf2 xff\cf5 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 green\cf2 : (\cf5 float\cf2 )greenByte/ \cf7 0\cf2 xff\cf5 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 blue\cf2 : (\cf5 float\cf2 )blueByte / \cf7 0\cf2 xff\cf5 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 alpha\cf2 :\cf7 1\cf9 .0\cf2 ];\'a0\'a0\'a0 \cf5 \
\'a0return \cf2 result;\cf5 \
\cf2 \}\cf5 \
}