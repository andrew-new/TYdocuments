{\rtf1\ansi\ansicpg936\cocoartf1187\cocoasubrtf370
{\fonttbl\f0\fnil\fcharset0 Consolas;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;\red53\green117\blue213;\red13\green19\blue31;\red255\green255\blue255;
\red199\green232\blue255;\red163\green42\blue47;\red253\green154\blue48;\red34\green185\blue18;\red217\green226\blue255;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280

\f0\fs26 \cf2 \cb3 //
\f1 \'b4\'d3\'cd\'f8\'c2\'e7\'cf\'c2\'d4\'d8\'cd\'bc\'c6\'ac
\f0 \cf4 \
\pard\pardeftab720\sl280
\cf5 -(\cf6 UIImage\cf4  \cf5 *)\cf4  \cf7 getImageFromURL\cf5 :(\cf6 NSString\cf4  \cf5 *)fileURL \{\cf4 \
\'a0\'a0\'a0\'a0\cf5 NSLog(\cf8 @"
\f1 \'d6\'b4\'d0\'d0\'cd\'bc\'c6\'ac\'cf\'c2\'d4\'d8\'ba\'af\'ca\'fd
\f0 "\cf5 );\cf4 \
\'a0\'a0\'a0\'a0\cf6 UIImage\cf4  \cf5 * result;\cf4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf6 NSData\cf4  \cf5 * data = [\cf6 NSData\cf4  \cf7 dataWithContentsOfURL\cf5 :[\cf6 NSURL\cf4  \cf7 URLWithString\cf5 :fileURL]];\cf4 \
\'a0\'a0\'a0\'a0\cf5 result = [\cf6 UIImage\cf4  \cf7 imageWithData\cf5 :data];\cf4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0return \cf5 result;\cf4 \
\cf5 \}\cf4 \
\'a0\
\pard\pardeftab720\sl280
\cf2 //
\f1 \'bd\'ab\'cb\'f9\'cf\'c2\'d4\'d8\'b5\'c4\'cd\'bc\'c6\'ac\'b1\'a3\'b4\'e6\'b5\'bd\'b1\'be\'b5\'d8
\f0 \cf4 \
\pard\pardeftab720\sl280
\cf5 -(\cf4 void\cf5 )\cf4  \cf7 saveImage\cf5 :(\cf6 UIImage\cf4  \cf5 *)image\cf4  \cf7 withFileName\cf5 :(\cf6 NSString\cf4  \cf5 *)imageName\cf4  \cf7 ofType\cf5 :(\cf6 NSString\cf4  \cf5 *)extension\cf4  \cf7 inDirectory\cf5 :(\cf6 NSString\cf4  \cf5 *)directoryPath \{\cf4 \
\'a0\'a0\'a0\'a0if \cf5 ([[extension\cf4  \cf7 lowercaseString\cf5 ]\cf4  \cf7 isEqualToString\cf5 :\cf8 @"png"\cf5 ]) \{\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 [UIImagePNGRepresentation(image)\cf4  \cf7 writeToFile\cf5 :[directoryPath\cf4  \cf7 stringByAppendingPathComponent\cf5 :[\cf6 NSString\cf4  \cf7 stringWithFormat\cf5 :\cf8 @"%@.%@"\cf5 , imageName, \cf8 @"png"\cf5 ]]\cf4  \cf7 options\cf5 :\cf6 NSAtomicWrite\cf4  \cf7 error\cf4 :nil\cf5 ];\cf4 \
\'a0\'a0\'a0\'a0\cf5 \} \cf4 else if \cf5 ([[extension\cf4  \cf7 lowercaseString\cf5 ]\cf4  \cf7 isEqualToString\cf5 :\cf8 @"jpg"\cf5 ] || [[extension\cf4  \cf7 lowercaseString\cf5 ]\cf4  \cf7 isEqualToString\cf5 :\cf8 @"jpeg"\cf5 ]) \{\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 [UIImageJPEGRepresentation(image, \cf8 1\cf9 .0\cf5 )\cf4  \cf7 writeToFile\cf5 :[directoryPath\cf4  \cf7 stringByAppendingPathComponent\cf5 :[\cf6 NSString\cf4  \cf7 stringWithFormat\cf5 :\cf8 @"%@.%@"\cf5 , imageName, \cf8 @"jpg"\cf5 ]]\cf4  \cf7 options\cf5 :\cf6 NSAtomicWrite\cf4  \cf7 error\cf4 :nil\cf5 ];\cf4 \
\'a0\'a0\'a0\'a0\cf5 \} \cf4 else \cf5 \{\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 //ALog(@"Image Save Failed\\nExtension: (%@) is not recognized, use (PNG/JPG)", extension);\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 NSLog(\cf8 @"
\f1 \'ce\'c4\'bc\'fe\'ba\'f3\'d7\'ba\'b2\'bb\'c8\'cf\'ca\'b6
\f0 "\cf5 );\cf4 \
\'a0\'a0\'a0\'a0\cf5 \}\cf4 \
\cf5 \}\cf4 \
\'a0\
\pard\pardeftab720\sl280
\cf2 //
\f1 \'b6\'c1\'c8\'a1\'b1\'be\'b5\'d8\'b1\'a3\'b4\'e6\'b5\'c4\'cd\'bc\'c6\'ac
\f0 \cf4 \
\pard\pardeftab720\sl280
\cf5 -(\cf6 UIImage\cf4  \cf5 *)\cf4  \cf7 loadImage\cf5 :(\cf6 NSString\cf4  \cf5 *)fileName\cf4  \cf7 ofType\cf5 :(\cf6 NSString\cf4  \cf5 *)extension\cf4  \cf7 inDirectory\cf5 :(\cf6 NSString\cf4  \cf5 *)directoryPath \{\cf4 \
\'a0\'a0\'a0\'a0\cf6 UIImage\cf4  \cf5 * result = [\cf6 UIImage\cf4  \cf7 imageWithContentsOfFile\cf5 :[\cf6 NSString\cf4  \cf7 stringWithFormat\cf5 :\cf8 @"%@/%@.%@"\cf5 , directoryPath, fileName,\cf4  \cf7 extension\cf5 ]];\cf4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0return \cf5 result;\cf4 \
\cf5 \}\cf4 \
\'a0\
\pard\pardeftab720\sl280
\cf2 //
\f1 \'b4\'d3\'cd\'f8\'c2\'e7\'cf\'c2\'d4\'d8\'cd\'bc\'c6\'ac\'a3\'ac\'b1\'a3\'b4\'e6\'a3\'ac\'b2\'a2\'d3\'c3
\f0  UIImageView 
\f1 \'b4\'d3\'b1\'a3\'b4\'e6\'d6\'d0\'cf\'d4\'ca\'be
\f0 \cf4 \
\pard\pardeftab720\sl280
\cf6 NSString\cf4  \cf5 * documentsDirectoryPath = [NSSearchPathForDirectoriesInDomains(\cf6 NSDocumentDirectory\cf5 , \cf6 NSUserDomainMask\cf5 , \cf4 YES\cf5 )\cf4  \cf7 objectAtIndex\cf5 :\cf8 0\cf5 ];\cf4 \
\'a0\'a0\'a0\'a0\cf5 NSLog(\cf8 @"
\f1 \'b1\'a3\'b4\'e6\'c2\'b7\'be\'b6
\f0 :%@"\cf5 ,documentsDirectoryPath);\cf4 \
\'a0\'a0\'a0\'a0\cf2 //Get Image From URL\cf4 \
\'a0\'a0\'a0\'a0\cf6 UIImage\cf4  \cf5 * imageFromURL = [\cf4 self \cf7 getImageFromURL\cf5 :\cf8 @"{\field{\*\fldinst{HYPERLINK "http://file.duteba.com/phone/2009/04/5/ftGxL8kcUL.jpg"}}{\fldrslt http://file.duteba.com/phone/2009/04/5/ftGxL8kcUL.jpg}}"\cf5 ];\cf4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf2 //Save Image to Directory\cf4 \
\'a0\'a0\'a0\'a0\cf5 [\cf4 self \cf7 saveImage\cf5 :imageFromURL\cf4  \cf7 withFileName\cf5 :\cf8 @"MyImage"\cf4  \cf7 ofType\cf5 :\cf8 @"jpg"\cf4  \cf7 inDirectory\cf5 :documentsDirectoryPath];\cf4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf2 //Load Image From Directory\cf4 \
\'a0\'a0\'a0\'a0\cf6 UIImage\cf4  \cf5 * imageFromWeb = [\cf4 self \cf7 loadImage\cf5 :\cf8 @"MyImage"\cf4  \cf7 ofType\cf5 :\cf8 @"jpg"\cf4  \cf7 inDirectory\cf5 :documentsDirectoryPath];\cf4 \
\'a0\'a0\'a0\'a0\cf5 [img\cf4  \cf7 setImage\cf5 :imageFromWeb];\cf4 \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf2 //
\f1 \'c8\'a1\'b5\'c3\'c4\'bf\'c2\'bc\'cf\'c2\'cb\'f9\'d3\'d0\'ce\'c4\'bc\'fe\'c3\'fb
\f0 \cf4 \
\'a0\'a0\'a0\'a0\cf6 NSArray\cf4  \cf5 *file = [[[\cf6 NSFileManager\cf4  \cf7 alloc\cf5 ]\cf4  \cf7 init\cf5 ]\cf4  \cf7 subpathsAtPath\cf5 :documentsDirectoryPath];\cf4 \
\'a0\'a0\'a0\'a0\cf2 //NSLog(@"%d",[file count]);\cf4 \
\'a0\'a0\'a0\'a0\cf5 NSLog(\cf8 @"%@"\cf5 ,file);\cf4 \
}