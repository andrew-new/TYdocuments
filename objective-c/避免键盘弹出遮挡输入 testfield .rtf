{\rtf1\ansi\ansicpg936\cocoartf1187\cocoasubrtf370
{\fonttbl\f0\fnil\fcharset0 Consolas;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;\red53\green117\blue213;\red13\green19\blue31;\red255\green255\blue255;
\red199\green232\blue255;\red253\green154\blue48;\red163\green42\blue47;\red217\green226\blue255;\red34\green185\blue18;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280

\f0\fs26 \cf2 \cb3 // Implement viewDidLoad to do additional setup after loading the view, typically from a nib.\cf4 \
\pard\pardeftab720\sl280
\cf5 - (\cf4 void\cf5 )viewDidLoad \cf4 \
\cf5 \{\cf4 \
\'a0\'a0\'a0\'a0\cf5 [\cf4 super \cf6 viewDidLoad\cf5 ];\cf4 \
\'a0\
\'a0\'a0\'a0\'a0\cf2 // register for keyboard notifications\cf4 \
\'a0\'a0\'a0\'a0\cf5 [[\cf7 NSNotificationCenter\cf4  \cf6 defaultCenter\cf5 ]\cf4  \cf6 addObserver\cf5 :\cf4 self\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 selector\cf5 :\cf4 @selector\cf5 (keyboardWillShow:
\f1 \'a3\'a9
\f0 \cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 name\cf5 :\cf7 UIKeyboardWillShowNotification\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 object\cf5 :\cf4 self\cf8 .view.window\cf5 ];\cf4 \
\'a0\'a0\'a0\'a0\cf2 // register for keyboard notifications\cf4 \
\'a0\'a0\'a0\'a0\cf5 [[\cf7 NSNotificationCenter\cf4  \cf6 defaultCenter\cf5 ]\cf4  \cf6 addObserver\cf5 :\cf4 self\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 selector\cf5 :\cf4 @selector\cf5 (keyboardWillHide:) \cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 name\cf5 :\cf7 UIKeyboardWillHideNotification\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 object\cf5 :\cf4 self\cf8 .view.window\cf5 ];\cf4 \
\'a0\'a0\'a0\'a0\cf5 keyboardIsShown = \cf7 NO\cf5 ;\cf4 \
\'a0\'a0\'a0\'a0\cf2 //make contentSize bigger than your scrollSize \cf4 \
\'a0\'a0\'a0\'a0\cf2 //(you will need to figure out for your own use case)\cf4 \
\'a0\'a0\'a0\'a0\cf7 CGSize\cf4  \cf5 scrollContentSize = CGSizeMake(\cf9 320\cf5 , \cf9 345\cf5 );\cf4 \
\'a0\'a0\'a0\'a0self\cf8 .scrollView.contentSize\cf4  \cf5 = scrollContentSize;\cf4 \
\cf5 \}\cf4 \
\'a0\
\cf5 - (\cf4 void\cf5 )viewDidUnload \{\cf4 \
\'a0\'a0\'a0\'a0\cf2 // Release any retained subviews of the main view.\cf4 \
\'a0\'a0\'a0\'a0\cf2 // e.g. self.myOutlet = nil;\cf4 \
\'a0\
\'a0\'a0\'a0\'a0\cf2 // unregister for keyboard notifications while not visible.\cf4 \
\'a0\'a0\'a0\'a0\cf5 [[\cf7 NSNotificationCenter\cf4  \cf6 defaultCenter\cf5 ]\cf4  \cf6 removeObserver\cf5 :\cf4 self\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 name\cf5 :\cf7 UIKeyboardWillShowNotification\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 object\cf4 :nil\cf5 ]; \cf4 \
\'a0\'a0\'a0\'a0\cf2 // unregister for keyboard notifications while not visible.\cf4 \
\'a0\'a0\'a0\'a0\cf5 [[\cf7 NSNotificationCenter\cf4  \cf6 defaultCenter\cf5 ]\cf4  \cf6 removeObserver\cf5 :\cf4 self\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 name\cf5 :\cf7 UIKeyboardWillHideNotification\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 object\cf4 :nil\cf5 ];\'a0 \cf4 \
\cf5 \}\cf4 \
\'a0\
\cf5 - (\cf4 void\cf5 )dealloc \{\cf4 \
\'a0\'a0\'a0\'a0\cf2 // Release any retained subviews of the main view.\cf4 \
\'a0\'a0\'a0\'a0\cf2 // e.g. self.myOutlet = nil;\cf4 \
\'a0\
\'a0\'a0\'a0\'a0\cf2 // unregister for keyboard notifications while not visible.\cf4 \
\'a0\'a0\'a0\'a0\cf5 [[\cf7 NSNotificationCenter\cf4  \cf6 defaultCenter\cf5 ]\cf4  \cf6 removeObserver\cf5 :\cf4 self\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 name\cf5 :\cf7 UIKeyboardWillShowNotification\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 object\cf4 :nil\cf5 ]; \cf4 \
\'a0\'a0\'a0\'a0\cf2 // unregister for keyboard notifications while not visible.\cf4 \
\'a0\'a0\'a0\'a0\cf5 [[\cf7 NSNotificationCenter\cf4  \cf6 defaultCenter\cf5 ]\cf4  \cf6 removeObserver\cf5 :\cf4 self\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 name\cf5 :UIKeyboardWillHideNotification\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 object\cf4 :nil\cf5 ];\'a0 \cf4 \
\cf5 \}\cf4 \
\'a0\
\cf5 - (\cf4 void\cf5 )keyboardWillHide:(\cf7 NSNotification\cf4  \cf5 *)n\cf4 \
\cf5 \{\cf4 \
\'a0\'a0\'a0\'a0\cf5 NSDictionary* userInfo = [n\cf4  \cf6 userInfo\cf5 ];\cf4 \
\'a0\'a0\'a0\'a0\cf2 // get the size of the keyboard\cf4 \
\'a0\'a0\'a0\'a0\cf7 CGSize\cf4  \cf5 keyboardSize = \cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 [[userInfo\cf4  \cf6 objectForKey\cf5 :UIKeyboardFrameBeginUserInfoKey]\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 CGRectValue\cf5 ]\cf8 .size\cf5 ;\cf4 \
\'a0\'a0\'a0\'a0\cf2 // resize the scrollview\cf4 \
\'a0\'a0\'a0\'a0\cf7 CGRect\cf4  \cf5 viewFrame = \cf4 self\cf8 .scrollView.frame\cf5 ;\cf4 \
\'a0\'a0\'a0\'a0\cf2 // I'm also subtracting a constant kTabBarHeight because my UIScrollView \cf4 \
\'a0\'a0\'a0\'a0\cf2 // was offset by the UITabBar so really only the portion of the keyboard that \cf4 \
\'a0\'a0\'a0\'a0\cf2 // is leftover pass the UITabBar is obscuring my UIScrollView.\cf4 \
\'a0\'a0\'a0\'a0\cf5 viewFrame\cf8 .size.height\cf4  \cf5 += (keyboardSize\cf8 .height\cf4  \cf5 - kTabBarHeight);\cf4 \
\'a0\'a0\'a0\'a0\cf5 [\cf7 UIView\cf4  \cf6 beginAnimations\cf4 :nil \cf6 context\cf5 :\cf4 NULL\cf5 ];\cf4 \
\'a0\'a0\'a0\'a0\cf5 [\cf7 UIView\cf4  \cf6 setAnimationBeginsFromCurrentState\cf5 :\cf4 YES\cf5 ];\cf4 \
\'a0\'a0\'a0\'a0\cf2 // The kKeyboardAnimationDuration I am using is 0.3\cf4 \
\'a0\'a0\'a0\'a0\cf5 [\cf7 UIView\cf4  \cf6 setAnimationDuration\cf5 :kKeyboardAnimationDuration];\cf4 \
\'a0\'a0\'a0\'a0\cf5 [\cf4 self\cf8 .scrollView\cf4  \cf6 setFrame\cf5 :viewFrame];\cf4 \
\'a0\'a0\'a0\'a0\cf5 [\cf7 UIView\cf4  \cf6 commitAnimations\cf5 ];\cf4 \
\'a0\'a0\'a0\'a0\cf5 keyboardIsShown = \cf7 NO\cf5 ;\cf4 \
\cf5 \}\cf4 \
\'a0\
\cf5 - (\cf4 void\cf5 )keyboardWillShow:(\cf7 NSNotification\cf4  \cf5 *)n\cf4 \
\cf5 \{\cf4 \
\'a0\'a0\'a0\'a0\cf2 // This is an ivar I'm using to ensure that we do not do the frame size \cf4 \
\'a0\'a0\'a0\'a0\cf2 // adjustment on the UIScrollView if the keyboard is already shown.\'a0 \cf4 \
\'a0\'a0\'a0\'a0\cf2 // This can happen if the user, after fixing editing a UITextField, \cf4 \
\'a0\'a0\'a0\'a0\cf2 // scrolls the resized UIScrollView to another UITextField and attempts \cf4 \
\'a0\'a0\'a0\'a0\cf2 // to edit the next UITextField.\'a0 If we were to resize the UIScrollView again, \cf4 \
\'a0\'a0\'a0\'a0\cf2 // it would be disastrous. NOTE: The keyboard notification will fire \cf4 \
\'a0\'a0\'a0\'a0\cf2 // even when the keyboard is already shown.\cf4 \
\'a0\'a0\'a0\'a0if \cf5 (keyboardIsShown) \{\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0return\cf5 ;\cf4 \
\'a0\'a0\'a0\'a0\cf5 \}\cf4 \
\'a0\
\'a0\'a0\'a0\'a0\cf5 NSDictionary* userInfo = [n\cf4  \cf6 userInfo\cf5 ];\cf4 \
\'a0\
\'a0\'a0\'a0\'a0\cf2 // get the size of the keyboard\cf4 \
\'a0\'a0\'a0\'a0\cf7 CGSize\cf4  \cf5 keyboardSize = \cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf5 [[userInfo\cf4  \cf6 objectForKey\cf5 :UIKeyboardFrameBeginUserInfoKey]\cf4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \cf6 CGRectValue\cf5 ]\cf8 .size\cf5 ;\cf4 \
\'a0\
\'a0\'a0\'a0\'a0\cf2 // resize the noteView\cf4 \
\'a0\'a0\'a0\'a0\cf7 CGRect\cf4  \cf5 viewFrame = \cf4 self\cf8 .scrollView.frame\cf5 ;\cf4 \
\'a0\'a0\'a0\'a0\cf2 // I'm also subtracting a constant kTabBarHeight because my UIScrollView \cf4 \
\'a0\'a0\'a0\'a0\cf2 // was offset by the UITabBar so really only the portion of the keyboard \cf4 \
\'a0\'a0\'a0\'a0\cf2 // that is leftover pass the UITabBar is obscuring my UIScrollView.\cf4 \
\'a0\'a0\'a0\'a0\cf5 viewFrame\cf8 .size.height\cf4  \cf5 -= (keyboardSize\cf8 .height\cf4  \cf5 - kTabBarHeight);\cf4 \
\'a0\'a0\'a0\'a0\cf5 [\cf7 UIView\cf4  \cf6 beginAnimations\cf4 :nil \cf6 context\cf5 :\cf4 NULL\cf5 ];\cf4 \
\'a0\'a0\'a0\'a0\cf5 [\cf7 UIView\cf4  \cf6 setAnimationBeginsFromCurrentState\cf5 :\cf4 YES\cf5 ];\cf4 \
\'a0\'a0\'a0\'a0\cf2 // The kKeyboardAnimationDuration I am using is 0.3\cf4 \
\'a0\'a0\'a0\'a0\cf5 [\cf7 UIView\cf4  \cf6 setAnimationDuration\cf5 :kKeyboardAnimationDuration];\cf4 \
\'a0\'a0\'a0\'a0\cf5 [\cf4 self\cf8 .scrollView\cf4  \cf6 setFrame\cf5 :viewFrame];\cf4 \
\'a0\'a0\'a0\'a0\cf5 [\cf7 UIView\cf4  \cf6 commitAnimations\cf5 ];\cf4 \
\'a0\'a0\'a0\'a0\cf5 keyboardIsShown = \cf4 YES\cf5 ;\cf4 \
\cf5 \}\cf4 \
}